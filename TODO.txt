I’ve got a peak finder that takes slices and locates peaks at an arbitrary number of rotations of the image, and makes a histogram of the radii of peaks from the center of the beamstop.

With just simple peak finding on the histos, it does really well at finding the rings (except for the beamstop, which it thinks is offset because the smoothing algorithm lends that part of the image some symmetry that it does not actually have - since it’s more or less a square well in that region).

If we do the 1st order derive of the slices, then we get good locations on the beamstop, since the slope of the square well is very large in magnitude. 

So, for this my TODO is:

    * use function fitting to the peaks (probably a gausian) to get better estimate of centers and widths
    * refine the 1st order deriv portion that looks for the edges of the beamstop.
    * think about how to find the center of the beamstop, given only an approximate center coordinate to start with.


NOTES:

    the lower exposure images I got recently from the sfsu installation are very difficult to get anywhere with - 
        the important peaks (those not near center ) are typically small and in order to peak detect on them I have
        to move the thresh low enough that I pick up noise too... Perhaps look into the sigma adjustment on the peak finder.

    The center around the beamstop always looks like a peak and swamps any real agbeh peak we might have in there. It might be good to limit always (unless we know there is no beamstop) to get 50 to 70 pix away from center before we allow peaks to count. Maybe just use a default of 70 to end of detector.

    The dPeaks is not working well with the lower intensity - lots of litle close together noise peaks. And when there's only one (or two, but one swamped by BStop), dPeaks doesn't really mean anything. Maybe we need to look at the peaks Hist more and do some analysis on that - 
        smooth it, check the peak diffs in there?

    more smoothing on the row and col clean up the noise peaks a bit, but of course we loose real peaks, so our data is more sparse...

    maybe I can determine a good standard for a peak width to use for fitting gauss to the col/row vectors...
        looks like 25 to 30 is pretty consistent.

    For the dPeaksHist, need to find max, then fit gaus to that. We get sometimes bad diff values (double, tripple, etc).



Tried unrolling the image into polar coords and stepping down the rows - works better.

    I still need a 'onePeak' bool if the image has only one peak - the dPeaksHist fills up with small false diffs. I can clean some of it out with a minDiff parameter, but it's not good enough. 

        - Try smaller polar representation


Made the impolar 500x500. Put gaus blur(5,5) on the impolar, then still do smooth - really clear and low noise now, maybe we could stand a less agressive smooth?

    lowered the peakThresh to 0.005 from 0.01, but only tried it on image #150, so the others that have spacings
    in the comment need to be done again.

----------------------------------------
DONE: Never look at more than the 5 innermost peaks - maybe up to 7 (adjustable param)

DONE: Firstpeak - maybe keep at 50, and if our spacing is small enough, then reduce it to 20 or so and include that one.
        Did it the opposite way - start at 20 and increase to 50 if spacing is big.
DONE: Make center coord into double.

DONE:   Clean up repeated (very close) peaks in peaksHist at end.

Verbose can include the histos as np arrays.
